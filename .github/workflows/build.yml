name: Build and Pack and Push to Nuget on version update

on:
  push:
    branches: 
    - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 15
    env:
      DOTNET_NOLOGO: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_GENERATE_ASPNET_CERTIFICATE: 0
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_CERT_REVOCATION_MODE: "offline"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Restore NuGet Packages
        run: dotnet restore ExactOnline.Client.Sdk.sln

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build and Pack Solution
        run: msbuild ExactOnline.Client.Sdk.sln /t:pack /p:Configuration=Release

      - name: Run Unit Tests
        run: dotnet test test/ExactOnline.Client.Sdk.UnitTests/ --no-restore

      - name: Publish the package to nuget.org when we have a new version
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_AUTH_TOKEN }}
        run: |
          $version = (Select-Xml -Path .\src\Directory.Build.props -XPath /Project/PropertyGroup/Version).Node.InnerText
          $versions = (Invoke-WebRequest https://api.nuget.org/v3-flatcontainer/ExactOnline.Client.Sdk.vNext/index.json -UseBasicParsing | ConvertFrom-Json).versions
          if (-not($versions -contains $version)) {
            dotnet nuget push .\src\*.nupkg -k $env:NUGET_AUTH_TOKEN
          }
